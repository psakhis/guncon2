--- guncon2.c	2023-01-26 12:29:57.476639564 +0000
+++ guncon2_bis.c	2023-01-26 11:28:31.000000000 +0000
@@ -44,6 +44,7 @@
     struct mutex pm_mutex;
     bool is_open;
     char phys[64];
+    bool is_recalibrate;
 };
 
 struct gc_mode {
@@ -60,7 +61,8 @@
     int error, buttons;
     unsigned short x, y;
     signed char hat_x = 0;
-    signed char hat_y = 0;
+    signed char hat_y = 0;    
+    unsigned short _X_MIN, _X_MAX;
 
     switch (urb->status) {
         case 0:
@@ -122,6 +124,37 @@
         input_report_key(guncon2->input_device, BTN_C, buttons & GUNCON2_BTN_C);
         input_report_key(guncon2->input_device, BTN_START, buttons & GUNCON2_BTN_START);
         input_report_key(guncon2->input_device, BTN_SELECT, buttons & GUNCON2_BTN_SELECT);
+        
+        //micro calibration        
+        if ((!guncon2->is_recalibrate) && (buttons & GUNCON2_BTN_C) && (buttons & GUNCON2_DPAD_LEFT)) {
+            _X_MIN = input_abs_get_min(guncon2->input_device, ABS_X) - 1;	
+            _X_MAX = input_abs_get_max(guncon2->input_device, ABS_X); 	
+            input_set_abs_params(guncon2->input_device, ABS_X, _X_MIN, _X_MAX, 0, 0);
+            guncon2->is_recalibrate = true;
+        }	
+        if ((!guncon2->is_recalibrate) && (buttons & GUNCON2_BTN_C) && (buttons & GUNCON2_DPAD_RIGHT)) {
+            _X_MIN = input_abs_get_min(guncon2->input_device, ABS_X) + 1;	
+            _X_MAX = input_abs_get_max(guncon2->input_device, ABS_X); 	
+            input_set_abs_params(guncon2->input_device, ABS_X, _X_MIN, _X_MAX, 0, 0);
+            guncon2->is_recalibrate = true;
+        }
+        if ((!guncon2->is_recalibrate) && (buttons & GUNCON2_BTN_C) && (buttons & GUNCON2_DPAD_UP)) {
+            _X_MIN = input_abs_get_min(guncon2->input_device, ABS_X);	
+            _X_MAX = input_abs_get_max(guncon2->input_device, ABS_X) + 1; 	
+            input_set_abs_params(guncon2->input_device, ABS_X, _X_MIN, _X_MAX, 0, 0);
+            guncon2->is_recalibrate = true;
+        }	
+        if ((!guncon2->is_recalibrate) && (buttons & GUNCON2_BTN_C) && (buttons & GUNCON2_DPAD_DOWN)) {
+            _X_MIN = input_abs_get_min(guncon2->input_device, ABS_X);	
+            _X_MAX = input_abs_get_max(guncon2->input_device, ABS_X) - 1; 	
+            input_set_abs_params(guncon2->input_device, ABS_X, _X_MIN, _X_MAX, 0, 0);
+            guncon2->is_recalibrate = true;
+        }
+	
+        if (hat_x == 0 && hat_y == 0) {
+            guncon2->is_recalibrate = false;
+        }
+        // end micro calibration
 
         input_sync(guncon2->input_device);
     }
@@ -161,9 +194,10 @@
         retval = -EIO;
         goto out;
     }
-
+    
+    guncon2->is_recalibrate = false;
     guncon2->is_open = true;
-
+    
 out:
     mutex_unlock(&guncon2->pm_mutex);
     return retval;
@@ -174,6 +208,7 @@
     mutex_lock(&guncon2->pm_mutex);
     usb_kill_urb(guncon2->urb);
     guncon2->is_open = false;
+    guncon2->is_recalibrate = false;
     mutex_unlock(&guncon2->pm_mutex);
 }
 
@@ -210,6 +245,7 @@
 
     mutex_init(&guncon2->pm_mutex);
     guncon2->intf = intf;
+    guncon2->is_recalibrate = false;   
 
     usb_set_intfdata(guncon2->intf, guncon2);
 
